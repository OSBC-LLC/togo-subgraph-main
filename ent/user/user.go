// Code generated by ent, DO NOT EDIT.

package user

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldUserImageID holds the string denoting the user_image_id field in the database.
	FieldUserImageID = "user_image_id"
	// FieldProfileID holds the string denoting the profile_id field in the database.
	FieldProfileID = "profile_id"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeProfile holds the string denoting the profile edge name in mutations.
	EdgeProfile = "profile"
	// EdgeDogProfiles holds the string denoting the dogprofiles edge name in mutations.
	EdgeDogProfiles = "dogProfiles"
	// Table holds the table name of the user in the database.
	Table = "users"
	// ProfileTable is the table that holds the profile relation/edge.
	ProfileTable = "users"
	// ProfileInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfileInverseTable = "profiles"
	// ProfileColumn is the table column denoting the profile relation/edge.
	ProfileColumn = "profile_id"
	// DogProfilesTable is the table that holds the dogProfiles relation/edge.
	DogProfilesTable = "dog_profile_owners"
	// DogProfilesInverseTable is the table name for the DogProfileOwner entity.
	// It exists in this package in order to avoid circular dependency with the "dogprofileowner" package.
	DogProfilesInverseTable = "dog_profile_owners"
	// DogProfilesColumn is the table column denoting the dogProfiles relation/edge.
	DogProfilesColumn = "owner_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldFirstName,
	FieldLastName,
	FieldUserImageID,
	FieldProfileID,
	FieldUpdatedAt,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
